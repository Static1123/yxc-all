1.Spring对Bean进行实例化，调用Bean的构造函数;
2.Spring将值和bean的引用注入到bean对应的属性中;
3.如果bean实现了BeanNameAware接口，Spring将bean的ID传递给setBean-Name()方法；
4.如果bean实现了BeanFactoryAware接口，Spring将调用setBeanFactory()方法，将BeanFactory容器实例注入；
5.如果bean实现了ApplicationContextAware接口，Spring讲调用setApplicationContext()方法，将bean所在的应用上下文的引用传入进来；
6.如果bean实现了BeanPostProcessor接口，Spring将调用它们的post-ProcessBeforeInitialization()方法；
7.如果bean实现了InitializingBean接口，Spring将调用它们的after-PropertiesSet()方法。类似的，如果bean使用init-method声明了初始化
方法，该方法也会被调用；
8.如果bean实现了BeanPostProcessor接口，Spring将调用它们的post-ProcessAfterInitialization()方法；
9.此时，bean已经准备就绪，可以被应用程序使用，它们将一直驻留在应用上下文中，直到该应用上下文销毁；
10.如果bean实现了DisposableBean接口，Spring将调用它的destroy()接口方法。同样，如果bean使用destroy-method声明了销毁方法，该方法也
会被调用。